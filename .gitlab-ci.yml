image: python:3.10

include:
  - project: 'cloud/ci'
    ref: 'main'
    file: 'all.yml'

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  POETRY_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pypoetry"
  POETRY_VIRTUALENVS_IN_PROJECT: "true"

cache:
  paths:
    - .cache/pip
    - .cache/pytest_cache
    - .cache/pypoetry
    - .venv

stages:
  - test
  - lint
  - types

before_script:
  - pip install poetry
  - poetry config virtualenvs.create false
  - poetry install

Tests:
  stage: test
  script:
    - poetry run pytest --cov-report term --cov-report xml:coverage.xml --cov=groq
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    # https://docs.gitlab.com/ee/ci/yaml/index.html#artifactsexpire_in
    expire_in: 1 week
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  needs: []


Python Code Lint:
  stage: lint
  script:
    - poetry run black . --check
  needs: []

Static Type check:
  stage: types
  script:
    - poetry run mypy .
  allow_failure: true
  needs: []
  
